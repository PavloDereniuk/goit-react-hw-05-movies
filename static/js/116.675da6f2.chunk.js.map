{"version":3,"file":"static/js/116.675da6f2.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error/Error.styled.js","components/Error/Error.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = '16274515b96a6cc71d1764f30d5e6439';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchedMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n\nexport  const Text = styled.p`\n  margin-bottom: 10px;\n`;","import { useState, useEffect } from 'react';\nimport { fetchMovieCast } from '../../api';\nimport { useParams } from 'react-router-dom';\n\nimport Loader from '../../Loader';\nimport Error from 'components/Error/Error';\nimport { List, Item, Text } from './Cast.styled';\nimport NoFoundImage from './image/image_not_found.png';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        setError(false);\n        const MovieCast = await fetchMovieCast(movieId);\n        setCast(MovieCast);\n      } catch (error) {\n        setError(true);\n      }  finally {\n        setLoading(false);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <Error />}\n      {cast.length > 0 ? (\n        <List>\n          {cast.map(({ profile_path, cast_id, name, character }) => {\n            const src = profile_path\n            ? `https://image.tmdb.org/t/p/w92/${profile_path}`\n            : NoFoundImage;\n            return (\n              <Item key={cast_id}>\n                  <img src={src} alt={name} width={92}/>\n                <div>\n                  <Text>{name}</Text>\n                  <Text>\n                    <b>Character:</b> {character}\n                  </Text>\n                </div>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <Text>Sorry, there is no information about this actor.</Text>\n      )}\n    </div>\n  );\n}","import styled from \"styled-components\";\n\nexport const Text = styled.p`\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\nmargin-top: 50px;\n`;","import { Text } from \"./Error.styled\"\n\nexport default function Error () {\n    return <Text>Oops! Something went wrong! Please, reload this page!</Text>\n}\n"],"names":["axios","API_KEY","fetchTrendMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchedMovies","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Text","_templateObject3","Cast","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","_getMovieCast","MovieCast","t0","finish","getMovieCast","_jsxs","children","_jsx","Loader","Error","length","map","profile_path","cast_id","name","character","src","alt","width"],"sourceRoot":""}